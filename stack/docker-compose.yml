version: '3'
services:
  pluto_db:
    image: postgres:9.6-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=pluto
      - POSTGRES_DB=pluto
    networks:
      - pluto

  pluto_dbloader:
    image: pluto_dbloader:develop
    volumes:
      - ./../test_config:/opt/PLUTO/config
    networks:
      - pluto

  pluto_nginx:
    image: nginx:stable-alpine
    volumes:
      - ./../test_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
    networks:
      - pluto

  pluto_s3server:
    image: scality/s3server
    ports:
      - 8000:8000
    volumes:
      - s3-data:/usr/src/app/localData
      - s3-meta:/usr/src/app/localMetadata
    networks:
      - pluto

  pluto_ws:
    image: pluto:develop
    volumes:
      - ./../test_config:/opt/PLUTO/config
    ports:
      - 3000:3000
    networks:
      - pluto
    deploy:
          mode: global  # Deploy one of these containers to each node in the swarm

  # Ships all logs on a given node to elasticsearch
  filebeat:
    container_name: filebeat
    build: filebeat
    image: filebeat:1.0.0
    command: -e -E 'output.elasticsearch.password=${ELASTIC_PASSWORD}'
    environment:
       - ELASTIC_HOST="http://elasticsearch:9200"
       - KIBANA_HOST="http://kibana:5601"
       - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
       - /var/lib/docker/containers/:/var/lib/docker/containers:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       # TODO Registry
    depends_on:
      - elasticsearch
      - kibana
      - setup_filebeat
    deploy:
      mode: global  # Deploy one of these containers to each node in the swarm
    networks:
      - stack
    user: root

  # Ships system and container metrics to elasticsearch
  # Remove from stack if metrics are not needed
  metricbeat:
    build: metricbeat
    image: metricbeat:1.0.0
    container_name: metricbeat
    environment:
       - ELASTIC_HOST="http://elasticsearch:9200"
       - KIBANA_HOST="http://kibana:5601"
       - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      #not supported on windows- /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -e -E 'output.elasticsearch.password=${ELASTIC_PASSWORD}' #"-system.hostfs=/hostfs"
    depends_on:
      - elasticsearch
      - kibana
      - setup_metricbeat
    deploy:
      mode: global  # Deploy one of these containers to each node in the swarm
    networks:
      - stack
    user: root

  # Stores all logs
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.1
    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
          - '9200:9200'
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - stack

  # Visualize the logs
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana-oss:6.1.1
    environment:
          - ELASTICSEARCH_USERNAME=elastic
          - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    networks:
      - stack
    depends_on: ['setup_kibana']

  # Short-lived container configures ES by posting settings to it once started
  configure-es:
    build: configure
    image: configure-es:1.0.0
    environment:
       - ELASTIC_HOST=http://elastic:${ELASTIC_PASSWORD}@elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - stack
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  setup_filebeat:
      image: docker.elastic.co/beats/filebeat:6.1.1
      container_name: setup_filebeat
      volumes: ['./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro']
      command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s filebeat']
      environment: ['ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
      networks: ['stack']
      depends_on: ['kibana']
      deploy:
            mode: global  # Deploy one of these containers to each node in the swarm

  setup_metricbeat:
      image: docker.elastic.co/beats/metricbeat:6.1.2
      container_name: setup_metricbeat
      volumes: ['./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro']
      command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s metricbeat']
      environment: ['ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
      networks: ['stack']
      depends_on: ['kibana']
      deploy:
            mode: global  # Deploy one of these containers to each node in the swarm

  setup_kibana:
      image: centos:7
      container_name: setup_kibana
      volumes: ['./scripts/setup-kibana.sh:/usr/local/bin/setup-kibana.sh:ro']
      command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-kibana.sh | tr -d "\r" | bash']
      environment: ['ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
      networks: ['stack']
      depends_on: ['elasticsearch']

volumes:
  pgdata:
  es-data:
  s3-data:
  s3-meta:

networks:
  stack:
    external: false
  pluto:
    external: false

